document.getElementById("deleteSelected").addEventListener("click", function () {
    let selectedIds = [];
    document.querySelectorAll(".select-item:checked").forEach(checkbox => {
        if (checkbox.value.trim() !== "") {
            selectedIds.push(checkbox.value);
        }
    });

    if (selectedIds.length === 0) {
        alert("Vui lòng chọn ít nhất một mục để xóa!");
        return;
    }

    if (!confirm("Bạn có chắc chắn muốn xóa các mục đã chọn?")) {
        return;
    }

    // Gửi danh sách ID dưới dạng chuỗi JSON đơn giản
    fetch("T002", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(selectedIds) // Chỉ gửi mảng ["id1", "id2", "id3"]
    })
    .then(response => response.json())
    .then(data => {
        alert(data.message);
        if (data.success) {
            location.reload();
        }
    })
    .catch(error => console.error("Lỗi fetch:", error));
});




protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    ResponseData responseData = new ResponseData();

    try {
        // Đọc dữ liệu JSON từ request
        StringBuilder sb = new StringBuilder();
        BufferedReader reader = request.getReader();
        String line;
        while ((line = reader.readLine()) != null) {
            sb.append(line);
        }
        String rawData = sb.toString();
        System.out.println("Dữ liệu nhận được: " + rawData);

        // Chuyển chuỗi JSON thành danh sách ID (Loại bỏ dấu ngoặc vuông [])
        rawData = rawData.replace("[", "").replace("]", "").replace("\"", ""); 
        List<String> userIds = Arrays.asList(rawData.split(",")); // Chuyển thành danh sách

        if (!userIds.isEmpty()) {
            customerDAO.softDeleteCustomers(userIds); // Xóa 1 lần bằng IN
            responseData.setSuccess(true);
            responseData.setMessage("Xóa thành công " + userIds.size() + " khách hàng!");
        } else {
            responseData.setSuccess(false);
            responseData.setMessage("Không có ID nào được chọn!");
        }
    } catch (Exception e) {
        e.printStackTrace();
        responseData.setSuccess(false);
        responseData.setMessage("Lỗi hệ thống: " + e.getMessage());
    }

    // Gửi response trực tiếp dưới dạng chuỗi JSON
    response.setContentType("application/json");
    PrintWriter out = response.getWriter();
    out.println("{\"success\":" + responseData.isSuccess() + ", \"message\":\"" + responseData.getMessage() + "\"}");
    out.flush();
}
