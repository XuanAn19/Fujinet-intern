<filter>
    <filter-name>AuthFilter</filter-name>
    <filter-class>com.example.AuthFilter</filter-class>
</filter>

<filter-mapping>
    <filter-name>AuthFilter</filter-name>
    <url-pattern>*.do</url-pattern>
</filter-mapping>


import java.io.IOException;
import javax.servlet.*;
import javax.servlet.http.*;

public class AuthFilter implements Filter {

    @Override
    public void init(FilterConfig filterConfig) throws ServletException {}

    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
            throws IOException, ServletException {
        
        System.out.println("AuthFilter is running...");

        HttpServletRequest req = (HttpServletRequest) request;
        HttpServletResponse res = (HttpServletResponse) response;
        HttpSession session = req.getSession(false);  // Không tạo session mới nếu chưa có

        String path = req.getServletPath();
        boolean isLoginPage = path.contains("login.do");  // Bỏ qua trang login

        if (!isLoginPage && (session == null || session.getAttribute("user") == null)) {
            System.out.println("User not logged in. Redirecting...");
            res.sendRedirect(req.getContextPath() + "/login.jsp");
            return; // Chặn request, không cho đi tiếp
        }

        // Nếu hợp lệ, tiếp tục request
        chain.doFilter(request, response);
    }

    @Override
    public void destroy() {}
}

